#!/bin/bash

echo Domain Name: ; read domainname ; export domainname

if [[ $(dig $domainname +short) = $(wget -qO- http://ipecho.net/plain) ]]
then
 echo $domainname A record matches this server ip. setup will continue.
else
 echo $domainname A record does not match this server ip. setup is cancelled.
 exit 1
fi

echo Email Address: ; read emailaddress ; export emailaddress

echo creating $domainname configuration
cp /var/lib/docker/volumes/swag/_data/nginx/site-confs/default /var/lib/docker/volumes/swag/_data/nginx/site-confs/$domainname

echo modifying $domainname configuration
echo removing default server
sed -i -e "s| default_server||g" /var/lib/docker/volumes/swag/_data/nginx/site-confs/$domainname

echo configuring cache
sed -i -e "s|cache/|cache/$domainname|g" /var/lib/docker/volumes/swag/_data/nginx/site-confs/$domainname
sed -i -e "s|auth_cache|auth_cache_$domainname|g" /var/lib/docker/volumes/swag/_data/nginx/site-confs/$domainname

echo configuring html directory
sed -i -e "s|/config/www|/config/www/$domainname/html|g" /var/lib/docker/volumes/swag/_data/nginx/site-confs/$domainname

echo configuring server name
sed -i -e "s|server_name _|server_name $domainname www.$domainname|g" /var/lib/docker/volumes/swag/_data/nginx/site-confs/$domainname

echo creating $domainname directory
mkdir -p /var/lib/docker/volumes/swag/_data/www/$domainname/html

echo generating certificate for $domainname
docker exec swag certbot --nginx --non-interactive --agree-tos --redirect -m $emailaddress -d $domainname -d www.$domainname

echo restarting swag
docker container restart swag > /dev/null 2>&1
